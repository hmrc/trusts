# microservice specific routes

->          /trustees                                                  trusts.trustees.Routes
->          /beneficiaries                                             trusts.beneficiaries.Routes
->          /settlors                                                  trusts.settlors.Routes
->          /protectors                                                trusts.protectors.Routes
->          /other-individuals                                         trusts.otherIndividuals.Routes
->          /assets                                                    trusts.assets.Routes

->          /register                                                  register.Routes

POST        /check                                                     controllers.CheckTrustController.checkExistingTrust

POST        /tax-enrolment/registration/taxable/hmrc-ters-org/:trn/subscriptions            controllers.TaxEnrolmentCallbackController.taxableSubscriptionCallback(trn: String)
POST        /tax-enrolment/registration/non-taxable/hmrc-tersnt-org/:trn/subscriptions      controllers.TaxEnrolmentCallbackController.nonTaxableSubscriptionCallback(trn: String)

GET         /:identifier/refresh                                       controllers.GetTrustController.getFromEtmp(identifier: String)

GET         /:identifier                                               controllers.GetTrustController.get(identifier: String, applyTransforms: Boolean = false)

GET         /:identifier/transformed                                   controllers.GetTrustController.get(identifier: String, applyTransforms: Boolean = true)

GET         /:identifier/trust-details                                 controllers.GetTrustController.getTrustDetails(identifier: String)

GET         /:identifier/transformed/beneficiaries                     controllers.GetTrustController.getBeneficiaries(identifier: String)

GET         /:identifier/transformed/settlors                          controllers.GetTrustController.getSettlors(identifier: String)

GET         /:identifier/transformed/protectors                        controllers.GetTrustController.getProtectors(identifier: String)

GET         /:identifier/transformed/other-individuals                 controllers.GetTrustController.getOtherIndividuals(identifier: String)

GET         /:identifier/transformed/protectors-already-exist          controllers.GetTrustController.getProtectorsAlreadyExist(identifier: String)

GET         /:identifier/transformed/other-individuals-already-exist   controllers.GetTrustController.getOtherIndividualsAlreadyExist(identifier: String)

GET         /:identifier/transformed/deceased-settlor-death-recorded   controllers.GetTrustController.getDeceasedSettlorDeathRecorded(identifier: String)

POST        /variation                                                 controllers.testOnly.TrustVariationsTestController.trustVariation

POST        /declare/:identifier                                       controllers.TrustVariationsController.declare(identifier: String)

POST        /add-unidentified-beneficiary/:identifier                  controllers.BeneficiaryTransformationController.addUnidentifiedBeneficiary(identifier: String)

POST        /amend-unidentified-beneficiary/:identifier/:index         controllers.BeneficiaryTransformationController.amendUnidentifiedBeneficiary(identifier: String, index: Int)

POST        /amend-individual-beneficiary/:identifier/:index           controllers.BeneficiaryTransformationController.amendIndividualBeneficiary(identifier: String, index: Int)

POST        /add-individual-beneficiary/:identifier                    controllers.BeneficiaryTransformationController.addIndividualBeneficiary(identifier: String)

POST        /add-charity-beneficiary/:identifier                       controllers.BeneficiaryTransformationController.addCharityBeneficiary(identifier: String)

POST        /amend-charity-beneficiary/:identifier/:index              controllers.BeneficiaryTransformationController.amendCharityBeneficiary(identifier: String, index: Int)

POST        /add-other-beneficiary/:identifier                         controllers.BeneficiaryTransformationController.addOtherBeneficiary(identifier: String)

POST        /amend-other-beneficiary/:identifier/:index                controllers.BeneficiaryTransformationController.amendOtherBeneficiary(identifier: String, index: Int)

POST        /add-company-beneficiary/:identifier                       controllers.BeneficiaryTransformationController.addCompanyBeneficiary(identifier: String)

POST        /add-trust-beneficiary/:identifier                         controllers.BeneficiaryTransformationController.addTrustBeneficiary(identifier: String)

POST        /amend-company-beneficiary/:identifier/:index              controllers.BeneficiaryTransformationController.amendCompanyBeneficiary(identifier: String, index: Int)

POST        /amend-trust-beneficiary/:identifier/:index                controllers.BeneficiaryTransformationController.amendTrustBeneficiary(identifier: String, index: Int)

POST        /add-large-beneficiary/:identifier                         controllers.BeneficiaryTransformationController.addLargeBeneficiary(identifier: String)

POST        /amend-large-beneficiary/:identifier/:index                controllers.BeneficiaryTransformationController.amendLargeBeneficiary(identifier: String, index: Int)

PUT         /:identifier/beneficiaries/remove                          controllers.BeneficiaryTransformationController.removeBeneficiary(identifier: String)

POST        /amend-individual-settlor/:identifier/:index               controllers.SettlorTransformationController.amendIndividualSettlor(identifier: String, index: Int)

POST        /amend-business-settlor/:identifier/:index                 controllers.SettlorTransformationController.amendBusinessSettlor(identifier: String, index: Int)

PUT         /:identifier/settlors/remove                               controllers.SettlorTransformationController.removeSettlor(identifier: String)

POST        /amend-deceased-settlor/:identifier                        controllers.SettlorTransformationController.amendDeceasedSettlor(identifier: String)

POST        /add-individual-settlor/:identifier                        controllers.SettlorTransformationController.addIndividualSettlor(identifier: String)

POST        /add-business-settlor/:identifier                          controllers.SettlorTransformationController.addBusinessSettlor(identifier: String)

POST        /add-individual-protector/:identifier                      controllers.ProtectorTransformationController.addIndividualProtector(identifier: String)

POST        /add-business-protector/:identifier                        controllers.ProtectorTransformationController.addBusinessProtector(identifier: String)

POST        /amend-business-protector/:identifier/:index               controllers.ProtectorTransformationController.amendBusinessProtector(identifier: String, index: Int)

PUT         /:identifier/protectors/remove                             controllers.ProtectorTransformationController.removeProtector(identifier: String)

PUT         /:identifier/trust-details/express                         controllers.transformations.trustdetails.TrustDetailsTransformationController.setExpress(identifier: String)
PUT         /:identifier/trust-details/uk-resident                     controllers.transformations.trustdetails.TrustDetailsTransformationController.setResident(identifier: String)
PUT         /:identifier/trust-details/taxable                         controllers.transformations.trustdetails.TrustDetailsTransformationController.setTaxable(identifier: String)
PUT         /:identifier/trust-details/uk-property                     controllers.transformations.trustdetails.TrustDetailsTransformationController.setProperty(identifier: String)
PUT         /:identifier/trust-details/recorded                        controllers.transformations.trustdetails.TrustDetailsTransformationController.setRecorded(identifier: String)
PUT         /:identifier/trust-details/uk-relation                     controllers.transformations.trustdetails.TrustDetailsTransformationController.setUKRelation(identifier: String)

PUT         /:identifier/trust-details/law-country                     controllers.transformations.trustdetails.TrustDetailsTransformationController.setLawCountry(identifier: String)
PUT         /:identifier/trust-details/administration-country          controllers.transformations.trustdetails.TrustDetailsTransformationController.setAdministrationCountry(identifier: String)
PUT         /:identifier/trust-details/type-of-trust                   controllers.transformations.trustdetails.TrustDetailsTransformationController.setTypeOfTrust(identifier: String)
PUT         /:identifier/trust-details/deed-of-variation               controllers.transformations.trustdetails.TrustDetailsTransformationController.setDeedOfVariation(identifier: String)
PUT         /:identifier/trust-details/inter-vivos                     controllers.transformations.trustdetails.TrustDetailsTransformationController.setInterVivos(identifier: String)
PUT         /:identifier/trust-details/efrbs-start-date                controllers.transformations.trustdetails.TrustDetailsTransformationController.setEfrbsStartDate(identifier: String)
PUT         /:identifier/trust-details/residential-status              controllers.transformations.trustdetails.TrustDetailsTransformationController.setResidentialStatus(identifier: String)

DELETE      /:identifier/transforms/migrate-to-taxable                 controllers.TrustVariationsController.removeTaxableMigrationTransforms(identifier: String)

GET         /:identifier/years-returns                                 controllers.GetTrustController.getYearsReturns(identifier: String)
PUT         /:identifier/years-returns                                 controllers.transformations.taxliability.TaxLiabilityTransformationController.setYearsReturns(identifier: String)
