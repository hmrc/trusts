# microservice specific routes

->          /trustees                                           trusts.trustees.Routes
->          /beneficiaries                                      trusts.beneficiaries.Routes
->          /settlors                                           trusts.settlors.Routes
->          /protectors                                         trusts.protectors.Routes
->          /other-individuals                                  trusts.otherIndividuals.Routes
->          /register                                           register.Routes

POST        /check                                              controllers.CheckTrustController.checkExistingTrust

POST        /tax-enrolment/callback/subscriptions               controllers.TaxEnrolmentCallbackController.subscriptionCallback

GET         /:identifier/refresh                                controllers.GetTrustController.getFromEtmp(identifier: String)

GET         /:identifier                                         controllers.GetTrustController.get(identifier: String, applyTransforms: Boolean = false)

GET         /:utr/transformed                                   controllers.GetTrustController.get(utr: String, applyTransforms: Boolean = true)

GET         /:utr/transformed/lead-trustee                      controllers.GetTrustController.getLeadTrustee(utr: String)

GET         /:utr/trust-details                                 controllers.GetTrustController.getTrustDetails(utr: String)

GET         /:utr/transformed/beneficiaries                     controllers.GetTrustController.getBeneficiaries(utr: String)

GET         /:utr/transformed/trustees                          controllers.GetTrustController.getTrustees(utr: String)

GET         /:utr/transformed/settlors                          controllers.GetTrustController.getSettlors(utr: String)

GET         /:utr/transformed/protectors                        controllers.GetTrustController.getProtectors(utr: String)

GET         /:utr/transformed/other-individuals                 controllers.GetTrustController.getOtherIndividuals(utr: String)

GET         /:utr/transformed/protectors-already-exist          controllers.GetTrustController.getProtectorsAlreadyExist(utr: String)

GET         /:utr/transformed/other-individuals-already-exist   controllers.GetTrustController.getOtherIndividualsAlreadyExist(utr: String)

GET         /:utr/transformed/deceased-settlor-death-recorded   controllers.GetTrustController.getDeceasedSettlorDeathRecorded(utr: String)

POST        /variation                                          controllers.testOnly.TrustVariationsTestController.trustVariation

POST        /declare/:utr                                       controllers.TrustVariationsController.declare(utr: String)

POST        /amend-lead-trustee/:utr                            controllers.TrusteeTransformationController.amendLeadTrustee(utr: String)

POST        /add-trustee/:utr                                   controllers.TrusteeTransformationController.addTrustee(utr: String)

POST        /amend-trustee/:utr/:index                          controllers.TrusteeTransformationController.amendTrustee(utr: String, index: Int)

POST        /promote-trustee/:utr/:index                        controllers.TrusteeTransformationController.promoteTrustee(utr: String, index: Int)

PUT         /:utr/trustees/remove                               controllers.TrusteeTransformationController.removeTrustee(utr: String)

POST        /add-unidentified-beneficiary/:utr                  controllers.BeneficiaryTransformationController.addUnidentifiedBeneficiary(utr: String)

POST        /amend-unidentified-beneficiary/:utr/:index         controllers.BeneficiaryTransformationController.amendUnidentifiedBeneficiary(utr: String, index: Int)

POST        /amend-individual-beneficiary/:utr/:index           controllers.BeneficiaryTransformationController.amendIndividualBeneficiary(utr: String, index: Int)

POST        /add-individual-beneficiary/:utr                    controllers.BeneficiaryTransformationController.addIndividualBeneficiary(utr: String)

POST        /add-charity-beneficiary/:utr                       controllers.BeneficiaryTransformationController.addCharityBeneficiary(utr: String)

POST        /amend-charity-beneficiary/:utr/:index              controllers.BeneficiaryTransformationController.amendCharityBeneficiary(utr: String, index: Int)

POST        /add-other-beneficiary/:utr                         controllers.BeneficiaryTransformationController.addOtherBeneficiary(utr: String)

POST        /amend-other-beneficiary/:utr/:index                controllers.BeneficiaryTransformationController.amendOtherBeneficiary(utr: String, index: Int)

POST        /add-company-beneficiary/:utr                       controllers.BeneficiaryTransformationController.addCompanyBeneficiary(utr: String)

POST        /add-trust-beneficiary/:utr                         controllers.BeneficiaryTransformationController.addTrustBeneficiary(utr: String)

POST        /amend-company-beneficiary/:utr/:index              controllers.BeneficiaryTransformationController.amendCompanyBeneficiary(utr: String, index: Int)

POST        /amend-trust-beneficiary/:utr/:index                controllers.BeneficiaryTransformationController.amendTrustBeneficiary(utr: String, index: Int)

POST        /add-large-beneficiary/:utr                         controllers.BeneficiaryTransformationController.addLargeBeneficiary(utr: String)

POST        /amend-large-beneficiary/:utr/:index                controllers.BeneficiaryTransformationController.amendLargeBeneficiary(utr: String, index: Int)

PUT         /:utr/beneficiaries/remove                          controllers.BeneficiaryTransformationController.removeBeneficiary(utr: String)

POST        /amend-individual-settlor/:utr/:index               controllers.SettlorTransformationController.amendIndividualSettlor(utr: String, index: Int)

POST        /amend-business-settlor/:utr/:index                 controllers.SettlorTransformationController.amendBusinessSettlor(utr: String, index: Int)

PUT         /:utr/settlors/remove                               controllers.SettlorTransformationController.removeSettlor(utr: String)

POST        /amend-deceased-settlor/:utr                        controllers.SettlorTransformationController.amendDeceasedSettlor(utr: String)

POST        /add-individual-settlor/:utr                        controllers.SettlorTransformationController.addIndividualSettlor(utr: String)

POST        /add-business-settlor/:utr                          controllers.SettlorTransformationController.addBusinessSettlor(utr: String)

POST        /add-individual-protector/:utr                      controllers.ProtectorTransformationController.addIndividualProtector(utr: String)

POST        /add-business-protector/:utr                      controllers.ProtectorTransformationController.addBusinessProtector(utr: String)

POST        /amend-business-protector/:utr/:index               controllers.ProtectorTransformationController.amendBusinessProtector(utr: String, index: Int)

PUT         /:utr/protectors/remove                             controllers.ProtectorTransformationController.removeProtector(utr: String)
