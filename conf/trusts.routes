# microservice specific routes

->          /trust-details                                                                  trusts.trustDetails.Routes
->          /trustees                                                                       trusts.trustees.Routes
->          /beneficiaries                                                                  trusts.beneficiaries.Routes
->          /settlors                                                                       trusts.settlors.Routes
->          /protectors                                                                     trusts.protectors.Routes
->          /other-individuals                                                              trusts.otherIndividuals.Routes
->          /assets                                                                         trusts.assets.Routes
->          /tax-liability                                                                  trusts.taxLiability.Routes

->          /register                                                                       register.Routes

POST        /check                                                                          controllers.CheckTrustController.checkExistingTrust

POST        /tax-enrolment/registration/taxable/hmrc-ters-org/:trn/subscriptions            controllers.TaxEnrolmentCallbackController.taxableSubscriptionCallback(trn: String)
POST        /tax-enrolment/registration/non-taxable/hmrc-tersnt-org/:trn/subscriptions      controllers.TaxEnrolmentCallbackController.nonTaxableSubscriptionCallback(trn: String)
POST        /tax-enrolment/migration-to-taxable/urn/:urn/subscriptionId/:subscriptionId     controllers.TaxEnrolmentCallbackController.migrationSubscriptionCallback(subscriptionId: String, urn: String)

POST        /orchestrator/migration-to-taxable/urn/:urn/utr/:utr                            controllers.OrchestratorCallbackController.migrationToTaxableCallback(urn: String, utr: String)

GET         /:identifier/refresh                                                            controllers.GetTrustController.getFromEtmp(identifier: String)

GET         /:identifier                                                                    controllers.GetTrustController.get(identifier: String, applyTransforms: Boolean = false)

GET         /:identifier/transformed                                                        controllers.GetTrustController.get(identifier: String, applyTransforms: Boolean = true)

# TODO - point all frontends at new route inside trusts.trustDetails.Routes and delete this route
GET         /:identifier/trust-details                                                      controllers.GetTrustController.getTrustDetails(identifier: String, applyTransformations: Boolean = true)

GET         /:identifier/transformed/protectors-already-exist                               controllers.GetTrustController.getProtectorsAlreadyExist(identifier: String)
GET         /:identifier/transformed/other-individuals-already-exist                        controllers.GetTrustController.getOtherIndividualsAlreadyExist(identifier: String)
GET         /:identifier/transformed/non-eea-companies-already-exist                        controllers.GetTrustController.getNonEeaCompaniesAlreadyExist(identifier: String)

POST        /variation                                                                      controllers.testOnly.TrustVariationsTestController.trustVariation

POST        /declare/:identifier                                                            controllers.TrustVariationsController.declare(identifier: String)

GET         /:identifier/taxable-migration/migrating-to-taxable                             controllers.TaxableMigrationController.getTaxableMigrationFlag(identifier: String)
POST        /:identifier/taxable-migration/migrating-to-taxable                             controllers.TaxableMigrationController.setTaxableMigrationFlag(identifier: String)

DELETE      /:identifier/transforms                                                         controllers.transformations.TransformationController.removeTransforms(identifier: String)

GET         /:identifier/is-trust-5mld                                                      controllers.GetTrustController.isTrust5mld(identifier: String)
